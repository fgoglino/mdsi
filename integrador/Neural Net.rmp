<?xml version="1.0" encoding="UTF-8"?><process version="9.7.000">
  <context>
    <input/>
    <output/>
    <macros/>
  </context>
  <operator activated="true" class="process" compatibility="9.7.000" expanded="true" name="Process">
    <parameter key="logverbosity" value="init"/>
    <parameter key="random_seed" value="2001"/>
    <parameter key="send_mail" value="never"/>
    <parameter key="notification_email" value=""/>
    <parameter key="process_duration_for_mail" value="30"/>
    <parameter key="encoding" value="SYSTEM"/>
    <process expanded="true">
      <operator activated="true" class="productivity:execute_process" compatibility="9.7.000" expanded="true" height="68" name="Execute Data Load And Merge" width="90" x="45" y="34">
        <parameter key="process_location" value="//Local Repository/integrador/Data Load And Merge"/>
        <parameter key="use_input" value="true"/>
        <parameter key="store_output" value="false"/>
        <parameter key="propagate_metadata_recursively" value="true"/>
        <parameter key="cache_process" value="true"/>
        <list key="macros"/>
        <parameter key="fail_for_unknown_macros" value="true"/>
      </operator>
      <operator activated="true" class="generate_attributes" compatibility="9.7.000" expanded="true" height="82" name="Generate Attributes" width="90" x="179" y="34">
        <list key="function_descriptions">
          <parameter key="Winner" value="if([Winner ID] == [First ID], &quot;First&quot;, &quot;Second&quot;)"/>
        </list>
        <parameter key="keep_all" value="true"/>
      </operator>
      <operator activated="true" class="select_attributes" compatibility="9.7.000" expanded="true" height="82" name="Select Attributes" width="90" x="313" y="34">
        <parameter key="attribute_filter_type" value="subset"/>
        <parameter key="attribute" value=""/>
        <parameter key="attributes" value="First ID|Name First|Name Second|Second ID|Winner ID"/>
        <parameter key="use_except_expression" value="false"/>
        <parameter key="value_type" value="attribute_value"/>
        <parameter key="use_value_type_exception" value="false"/>
        <parameter key="except_value_type" value="time"/>
        <parameter key="block_type" value="attribute_block"/>
        <parameter key="use_block_type_exception" value="false"/>
        <parameter key="except_block_type" value="value_matrix_row_start"/>
        <parameter key="invert_selection" value="true"/>
        <parameter key="include_special_attributes" value="false"/>
      </operator>
      <operator activated="true" class="set_role" compatibility="9.7.000" expanded="true" height="82" name="Set Role" width="90" x="447" y="34">
        <parameter key="attribute_name" value="Winner"/>
        <parameter key="target_role" value="label"/>
        <list key="set_additional_roles"/>
      </operator>
      <operator activated="true" class="productivity:execute_process" compatibility="9.7.000" expanded="true" height="68" name="Execute TypeNominalToIsType" width="90" x="581" y="34">
        <parameter key="process_location" value="TypeNominalToIsType"/>
        <parameter key="use_input" value="true"/>
        <parameter key="store_output" value="false"/>
        <parameter key="propagate_metadata_recursively" value="true"/>
        <parameter key="cache_process" value="true"/>
        <list key="macros"/>
        <parameter key="fail_for_unknown_macros" value="true"/>
      </operator>
      <operator activated="true" class="nominal_to_numerical" compatibility="9.7.000" expanded="true" height="103" name="Nominal to Numerical" width="90" x="715" y="34">
        <parameter key="return_preprocessing_model" value="false"/>
        <parameter key="create_view" value="false"/>
        <parameter key="attribute_filter_type" value="subset"/>
        <parameter key="attribute" value=""/>
        <parameter key="attributes" value="FirstIsBug|FirstIsDark|FirstIsDragon|FirstIsElectric|FirstIsFairy|FirstIsFighting|FirstIsFire|FirstIsFlying|FirstIsGhost|FirstIsGrass|FirstIsGround|FirstIsIce|FirstIsNone|FirstIsNormal|FirstIsPoison|FirstIsPsychic|FirstIsRock|FirstIsSteel|FirstIsWater|SecondIsBug|SecondIsDark|SecondIsDragon|SecondIsElectric|SecondIsFairy|SecondIsFighting|SecondIsFire|SecondIsFlying|SecondIsGhost|SecondIsGrass|SecondIsGround|SecondIsIce|SecondIsNone|SecondIsNormal|SecondIsPoison|SecondIsPsychic|SecondIsRock|SecondIsSteel|SecondIsWater|LEG Second|LEG First"/>
        <parameter key="use_except_expression" value="false"/>
        <parameter key="value_type" value="nominal"/>
        <parameter key="use_value_type_exception" value="false"/>
        <parameter key="except_value_type" value="file_path"/>
        <parameter key="block_type" value="single_value"/>
        <parameter key="use_block_type_exception" value="false"/>
        <parameter key="except_block_type" value="single_value"/>
        <parameter key="invert_selection" value="false"/>
        <parameter key="include_special_attributes" value="false"/>
        <parameter key="coding_type" value="unique integers"/>
        <parameter key="use_comparison_groups" value="false"/>
        <list key="comparison_groups"/>
        <parameter key="unexpected_value_handling" value="all 0 and warning"/>
        <parameter key="use_underscore_in_name" value="false"/>
      </operator>
      <operator activated="true" class="split_data" compatibility="9.7.000" expanded="true" height="103" name="Split Data" width="90" x="916" y="34">
        <enumeration key="partitions">
          <parameter key="ratio" value="0.8"/>
          <parameter key="ratio" value="0.2"/>
        </enumeration>
        <parameter key="sampling_type" value="linear sampling"/>
        <parameter key="use_local_random_seed" value="false"/>
        <parameter key="local_random_seed" value="1992"/>
      </operator>
      <operator activated="true" class="neural_net" compatibility="9.7.000" expanded="true" height="82" name="Neural Net" width="90" x="1050" y="34">
        <list key="hidden_layers">
          <parameter key="HL1" value="30"/>
          <parameter key="HL2" value="10"/>
        </list>
        <parameter key="training_cycles" value="200"/>
        <parameter key="learning_rate" value="0.01"/>
        <parameter key="momentum" value="0.9"/>
        <parameter key="decay" value="false"/>
        <parameter key="shuffle" value="true"/>
        <parameter key="normalize" value="true"/>
        <parameter key="error_epsilon" value="1.0E-4"/>
        <parameter key="use_local_random_seed" value="false"/>
        <parameter key="local_random_seed" value="1992"/>
      </operator>
      <operator activated="true" class="multiply" compatibility="9.7.000" expanded="true" height="82" name="Multiply" width="90" x="1184" y="34"/>
      <operator activated="true" class="apply_model" compatibility="9.7.000" expanded="true" height="82" name="Apply Model" width="90" x="1050" y="187">
        <list key="application_parameters"/>
        <parameter key="create_view" value="false"/>
      </operator>
      <operator activated="true" class="performance" compatibility="9.7.000" expanded="true" height="82" name="Performance" width="90" x="1184" y="187">
        <parameter key="use_example_weights" value="true"/>
      </operator>
      <connect from_op="Execute Data Load And Merge" from_port="result 1" to_op="Generate Attributes" to_port="example set input"/>
      <connect from_op="Generate Attributes" from_port="example set output" to_op="Select Attributes" to_port="example set input"/>
      <connect from_op="Select Attributes" from_port="example set output" to_op="Set Role" to_port="example set input"/>
      <connect from_op="Set Role" from_port="example set output" to_op="Execute TypeNominalToIsType" to_port="input 1"/>
      <connect from_op="Execute TypeNominalToIsType" from_port="result 1" to_op="Nominal to Numerical" to_port="example set input"/>
      <connect from_op="Nominal to Numerical" from_port="example set output" to_op="Split Data" to_port="example set"/>
      <connect from_op="Split Data" from_port="partition 1" to_op="Neural Net" to_port="training set"/>
      <connect from_op="Split Data" from_port="partition 2" to_op="Apply Model" to_port="unlabelled data"/>
      <connect from_op="Neural Net" from_port="model" to_op="Multiply" to_port="input"/>
      <connect from_op="Multiply" from_port="output 1" to_op="Apply Model" to_port="model"/>
      <connect from_op="Apply Model" from_port="labelled data" to_op="Performance" to_port="labelled data"/>
      <connect from_op="Performance" from_port="performance" to_port="result 1"/>
      <portSpacing port="source_input 1" spacing="0"/>
      <portSpacing port="sink_result 1" spacing="0"/>
      <portSpacing port="sink_result 2" spacing="0"/>
      <description align="center" color="yellow" colored="false" height="105" resized="false" width="180" x="10" y="127">Cargamos datos usando proceso Data Load and Merge.</description>
      <description align="center" color="yellow" colored="false" height="229" resized="false" width="180" x="267" y="129">Generamos un atributo que indica si gano el primer o segundo pokemon, usando un condicional logico; se usa esto en vez de ID ganador y lo usamos como label, y descartamos los IDs individuales y nombres ya que no son atributos que contribuyan a la red neuronal, si no generan un sobreajuste.</description>
      <description align="center" color="yellow" colored="false" height="229" resized="false" width="180" x="532" y="147">Convertimos los nominales a numericos; usando dummie coding se genera un atributo numerico nuevo por cada posible valor de un atributo nominal, y vale 1 si el atributo toma ese valor y 0 si no. Convertir a valores enteros unicos dentro de un mismo atributo NO es adecuado en nuestro caso.</description>
      <description align="center" color="yellow" colored="false" height="175" resized="false" width="180" x="853" y="259">Partimos el dataset en 40k ejemplos de entrenamiento y 10k de testeo. Generamos modelo entrenando con los 40k de entrenamiento, y luego aplicamos y sacamos performance a los 10k de testeo.</description>
    </process>
  </operator>
</process>
